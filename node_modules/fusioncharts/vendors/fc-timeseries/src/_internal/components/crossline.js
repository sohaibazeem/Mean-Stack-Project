import{SmartRenderer}from'../../../../fc-core/src/component-interface';import{pluck,pluckNumber,convertColor}from'../../../../fc-core/src/lib';import isValidNumber from'../../../../fc-utils/src/type/is-valid-number';const VERTICAL='vertical',GUTTER_5=5,M='M',L='L',l='l',h='h',v='v',z='z';class Crossline extends SmartRenderer{__setDefaultConfig(){super.__setDefaultConfig(),this.config.type=VERTICAL,this.config.value=void 0,this.config['default-stroke-width']=1,this.config['default-vertical-marker-fill']='#5f5f5f',this.config['default-vertical-label-fill']='#ffffff',this.config['default-horizontal-marker-fill']='#5f5f5f',this.config['default-horizontal-label-fill']='#ffffff',this.config['default-stroke']='#9a9a9a',this.config['default-stroke-opacity']=1,this.config['default-font-size']='10',this.config['default-font-weight']='normal',this.config['default-font-style']='normal',this.config['default-padding']='2',this.config['default-text-anchor']='middle'}configureAttributes(a){super.configureAttributes(a);let b=this.config;for(let c in a)a.hasOwnProperty(c)&&(b[c]=a[c])}getPathArr(){let a,b=this,c=b.config,d=c.type===VERTICAL,e=c.scale,f=c.value,g=b.getLinkedParent().config,i=g.padding,j=g.canvasLeft-i.left,k=g.canvasTop-i.top,l=g.canvasWidth,m=g.canvasHeight;return a=d?[M,e.getRangeValue(f),k,v,m]:[M,j,e.getRangeValue(f),h,l],a}drawVerticalCrosslineText(){let a,b,c,d,e=this,f=e.config,g=f.dateRange,i=f.timeFormatterFn({dateRange:g,type:'crossline'}),j=f.value,k=f.scale,l=pluckNumber(f.padding,f['default-padding']),m=e.getLinkedParent().config,n=m.padding,o=m.canvasLeft-n.left,p=m.canvasTop-n.top,q=m.canvasWidth,r=m.canvasHeight,s=p+r,t=e.getFromEnv('smartLabel'),u=e.getFromEnv('baseTextStyle'),w=0,x=pluck(f.markerFill,f['default-vertical-marker-fill']),y=pluck(f.labelFill,f['default-vertical-label-fill']);isValidNumber(j)&&(t.setStyle({fontFamily:pluck(f['font-family'],u['font-family']),fontSize:pluck(f['font-size'],f['default-font-size']),fontWeight:pluck(f['font-weight'],f['default-font-weight'])}),d=t.getOriSize(i),c=k.getRangeValue(j),e.addGraphicalElement({el:'group',container:{id:'thermo',label:'thermo',isParent:!0},component:e,label:'crossline',attr:{name:'veritcal-crosssline-marker-group'},id:'crossline'}),c+d.width/2+2*l>o+q?(a=[M,c,s,L,c,s+l,v,d.height+2*l,h,-(d.width+4*l),v,-(d.height+2*l),L,c-l,s+l,z],b='end',w=-2*l):c-d.width/2-2*l<o?(a=[M,c,s,L,c,s+l,v,d.height+2*l,h,d.width+4*l,v,-(d.height+2*l),L,c+l,s+l,z],b='start',w=2*l):(a=[M,c,s,L,c-l,s+l,L,c-d.width/2-2*l,s+l,v,d.height+2*l,h,d.width+4*l,v,-(d.height+2*l),L,c+l,s+l,z],b='middle'),e.addGraphicalElement({el:'path',attr:{path:a,fill:x},id:'vertical-crossline-marker',container:{label:'crossline'}}),e.addGraphicalElement({el:'text',attr:{fill:y,text:i,x:c+w,y:s+2*l+d.height/2,"text-anchor":b,"font-family":pluck(f['font-family'],u['font-family']),"font-size":pluck(f['font-size'],f['default-font-size']),"font-weight":pluck(f['font-weight'],f['default-font-weight']),"font-style":pluck(f['font-style'],f['default-font-style'])},id:'vertical-crossline-text',container:{label:'crossline'}}))}drawHorizontalCrosslineText(){let a=this,b=a.config,c=b.value,d=b.formatterFn({value:b.text,type:'crossline',prefix:b.prefix,suffix:b.suffix}),e=a.getFromEnv('baseTextStyle'),f=a.getFromEnv('smartLabel'),g=pluck(b.markerFill,b['default-horizontal-marker-fill']),h=pluck(b.labelFill,b['default-horizontal-label-fill']),i=this.getHorizontalMarkerProps();isValidNumber(c)&&(f.setStyle({fontFamily:pluck(b['font-family'],e['font-family']),fontSize:pluck(b['font-size'],b['default-font-size']),fontWeight:pluck(b['font-weight'],b['default-font-weight'])}),a.addGraphicalElement({el:'group',container:{id:'strato',label:'strato',isParent:!0},component:a,label:'crossline',attr:{name:'horizontal-crosssline-marker-group'},id:'crossline'}),a.addGraphicalElement({el:'path',attr:{path:i.markerPath,fill:g,stroke:g},id:'horizontal-crossline-marker',container:{label:'crossline'}}),a.addGraphicalElement({el:'text',attr:{fill:h,text:d,x:i.markerText.x,y:i.markerText.y,"text-anchor":pluck(b['text-anchor'],b['default-text-anchor']),"font-family":pluck(b['font-family'],e['font-family']),"font-size":pluck(b['font-size'],b['default-font-size']),"font-weight":pluck(b['font-weight'],b['default-font-weight']),"font-style":pluck(b['font-style'],b['default-font-style'])},id:'horizontal-crossline-text',container:{label:'crossline'}}))}getHorizontalMarkerProps(){let a,b,c,d=this,e=d.config,f=e.value,g=e.scale,i=e.yAxisAlignment,j=pluckNumber(e.padding,e['default-padding']),k=d.getLinkedParent().config,m=e.formatterFn({value:e.text,type:'crossline',prefix:e.prefix,suffix:e.suffix}),n=k.borderConfig,o=k.padding,p=k.canvasLeft+n.leftBorder-o.left,q=k.canvasWidth-n.rightBorder+o.left,r=p+q,s=d.getFromEnv('smartLabel'),t={},u={};return b=s.getSmartText(m),a=g.getRangeValue(f),'left'===i?(c=[M,p,a,h,-5,l,-5,-(b.height/2)-2*j,h,-(b.width+2*j),v,b.height+4*j,h,b.width+2*j,l,GUTTER_5,-b.height/2-2*j],t.x=p-10-(b.width+2*j)/2,t.y=a):'right'===i?(c=[M,r,a,h,GUTTER_5,l,10,-(b.height/2)-2*j,h,b.width+2*j,v,b.height+4*j,h,-(b.width+2*j),l,-10,-b.height/2-2*j],t.x=r+10+(b.width+2*j)/2,t.y=a):void 0,(u.markerPath=c,u.markerText=t,u)}draw(){let a=this,b=a.config,c=+b.value&&a.getPathArr()||[],d=convertColor(pluck(b.stroke,b['default-stroke'])),e=pluckNumber(b['stroke-width'],b['default-stroke-width']),f=pluckNumber(b['stroke-opacity'],b['default-stroke-opacity']);a.addGraphicalElement({el:'group',container:{id:'strato',label:'strato',isParent:!0},component:a,label:'verticalcrossline',attr:{name:'vertical-crosssline-group'},id:'crossline'}),a.addGraphicalElement({el:'group',container:{id:'strato',label:'strato',isParent:!0},component:a,label:'horizontalcrossline',attr:{name:'horizontal-crosssline-group'},id:'crossline'}),c.length&&a.addGraphicalElement({el:'path',attr:{path:c,stroke:d,"stroke-width":e,"stroke-opacity":f},container:{label:b.type+'crossline'},id:b.type+'-crossline-path',component:a}),b.showMarker&&(b.type===VERTICAL?a.drawVerticalCrosslineText():a.drawHorizontalCrosslineText())}}export default Crossline;