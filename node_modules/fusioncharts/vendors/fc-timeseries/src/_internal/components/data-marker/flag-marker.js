import SmartRenderer from'../../../../../fc-core/src/component-interface/smart-renderer';import timeConverter from'../../../../../fc-utils/src/time-converter';import{pluck,parseUnsafeString,defined,pluckNumber}from'../../../../../fc-core/src/lib';import{convertColor}from'../../../../../fc-core/src/lib/lib-graphics';import{getMinPlaceHolder,getPlaceHolderIndex,getFilterdTimeFormat}from'../../../../../fc-utils/src/time-bucket';import{addDep}from'../../../../../fc-core/src/dependency-manager';import flagMarkerAnimation from'./flag-marker.animation';let pathStr='M12.4444444,0 L1.55555556,0 C0.7,0 0,0.654545455 0,1.45454545 L0,10.8363636 C0,11.3454545 0.233333333,11.7817897 0.7,12.0727273 L7,16 L13.3,12.0727273 C13.6888889,11.7818182 14,11.3454545 14,10.8363636 L14,1.45454545 C14,0.654545455 13.3,0 12.4444444,0 Z',flagHeight=16,stickLength=10,flagWidth=16,VISIBLE='visible';addDep({name:'flagMarkerAnimation',type:'animationRule',extension:flagMarkerAnimation});class FlagMarker extends SmartRenderer{configure(a){super.configure(a);var b,c,d=this,e=d.config,f=e.styleInfo;if(a.data&&(this.config.data=a.data),c=a.style)for(let d in b=f[a.index]||(f[a.index]={}),c)b[d]=c[d];e.skipGrouping=a.skipGrouping,defined(a.visibility)&&(e.visibility=a.visibility)}constructor(){super(),this._getMarkerBounds=function(){return{width:flagWidth,height:26}},this.config.styleInfo={}}setHoverInEffect(a){let b=this,c=b.config,d=c.markerInfo[a].markers,e=d[0].style||{},f={},g={},h=b.getFromEnv('getStyleDef');d.multipleMarkers?f=c.defaultHoverStyle:(Object.assign(f,c.defaultHoverStyle,h(e['marker:hover'])),Object.assign(g,c.defaultHoverStyle,h(e['text:hover']))),b.getFromEnv('animationManager').setAnimationState('mouseOver'),b.setData({style:{marker:f,text:g},index:a,skipGrouping:!0})}setHoverOutEffect(a){let b=this;b.getFromEnv('animationManager').setAnimationState('mouseOut'),b.setData({style:{marker:{},text:{}},index:a,skipGrouping:!0})}__setDefaultConfig(){var a=this.config;a['default-stroke-width']=1,a['default-fill-opacity']=.5,a['default-stroke-opacity']=.5,a['default-font-color']='#ffffff',a['default-stroke-color-multiple']='#8c8c8c',a['default-tooltip-background']='#f2eded',a.defaultMarkerStyle={"stroke-width":1,"fill-opacity":.5,"stroke-opacity":.5},a.defaultTextStyle={fill:'#ffffff',"font-size":'12px',"fill-opacity":1,"stroke-opacity":1,"text-anchor":'middle',"font-weight":'normal',"font-style":'normal'},a.defaultHoverStyle={opacity:1,"fill-opacity":1,"stroke-opacity":1}}draw(){this.config.visibility===VISIBLE&&(this._createGroup(),this._drawMarkers())}getType(){return'dataMarker'}getName(){return'flagMarker'}_checkPointOverMarker(a,b,c,d){for(var e,f,g,h,i,j,k=this,l=k.config,m=l.dataInfo,n=k._getMarkerBounds(),o=l.markerInfo,p=Math.ceil(a),q=Math.floor(a),r=d,s=[p,q];r<n.width;)s.unshift(++p),s.push(--q),r+=d;return s.forEach(a=>{!j&&o[a]&&(e=m[a],f=e.x,g=e.y,h=(e.width||0)/2,i=f+h,b>=i-n.width/2&&b<=i+n.width/2&&c<=g&&c>=g-n.height&&(j={pointIndex:a,hovered:!0,pointObj:e,markerObj:o[a],component:k}))}),j}_getTooltext(a){var b,c,d,e,f=Math.round,g=this,h=g.config,i=g.getFromEnv('tooltipStyle')||{},j=pluckNumber(i['font-size'],10),k=h.markerInfo,l=k[a],m=l.markers,n=g.getStyleInformation(a),o=l.multipleMarkers;return l.formatedTime||(o?(b=g.getFromEnv('binDecider'),c=b.getRangeThreshold(),d=c[0]._name,l.formatedTime=timeConverter.formatter(getFilterdTimeFormat('%b %d, %Y %H:%M:%S:%L:%f',d)).format(new Date(l.startDate))):l.formatedTime=m[0].time),l.tooltipValue||(l.tooltipValue=g.getFromEnv('yScale').tickFormat(4,'.2s')(l.value)),e=`<div style='font-size: ${j+f(.2*j)}px'};'>${l.formatedTime}</div>`,e+=`<div style='margin-top:3px; margin-bottom:2px; height: 14px; font-size: ${j}px;'>
    <div style='float: left; font-size: 23px; line-height: 0.5; color:${n.marker.fill}'>â– &nbsp</div>
    <div style='float: left;'>${l.seriesname}&nbsp</div>
    <div style='float: right;'>&nbsp${l.tooltipValue}</div>
    </div>`,m.forEach(a=>{o&&(e+=`<div style='clear: both; margin-bottom:4px; font-size: ${j+f(.1*j)}px'};'>${a.time}</div>`),e+=a.tooltext?`<div style='clear: both; margin-bottom:6px; font-size: ${j}px;
      background-color:${o?h['default-tooltip-background']:''};'>${parseUnsafeString(a.tooltext)}</div>`:''}),e}allocatePosition(){this.config.skipGrouping||this._groupMarkers()}_groupMarkers(){var a,b,c,d,e=this,f=e.getLinkedParent(),g=f._getRelevantInfo(),h=g.firstTimeStamp,i=g.dataInfo,j=e.config,k=j.markerInfo={},l=e.getFromEnv('binDecider'),m=l.getRangeThreshold(),n=m[0]._name,o=j.data;j.dataInfo=i,o.forEach(f=>{c=timeConverter.parser(f.timeformat).parse(f.time),d=getPlaceHolderIndex(n)-getPlaceHolderIndex(getMinPlaceHolder(f.timeformat)),c&&0<=d&&1>=d&&(c=c.getTime(),c>=h&&(b=e.getFromEnv('xScale').getBinIndex(c,h),i[b]&&(!k[b]&&(a=k[b]={markers:[],id:f.seriesname+f.time,startDate:i[b].startDate,seriesname:f.seriesname}),a.markers.push(f),1<a.markers.length&&(a.multipleMarkers=!0))))})}_createGroup(){var a=this;a.addGraphicalElement({el:'group',container:{label:'group',id:'thermo',isParent:!0},component:a,label:'group',attr:{name:'markerGroup-thermo'}})}getStyleInformation(a){let b,c,d,e,f,g,h,i,j=this,k=j.config,l=k.styleInfo,m=k.markerInfo[a],n=j.getFromEnv('getStyleDef'),o=k.defaultMarkerStyle,p=k.defaultTextStyle,q=j.getLinkedParent()._getRelevantInfo(),r=j.getFromEnv('baseTextStyle');return g={},h={},i=l[a]||{},c=i.marker||{},f=m.markers[0],e=f.style||{},b=n(e.marker),d=n(e.text),m.multipleMarkers?b.fill=b.stroke=m.fill=k['default-stroke-color-multiple']:(b.fill=m.fill=convertColor(pluck(b.fill,q.fill),100*pluck(c['fill-opacity'],b['fill-opacity'],o['fill-opacity'])),b.stroke=m.stroke=convertColor(pluck(b.stroke,q.fill),100*pluck(b['stroke-opacity'],o['fill-opacity']))),Object.assign(g,o,b,i.marker),Object.assign(h,p,r,d,i.text),{marker:g,text:h}}_drawMarkers(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p=this,q=p.config,r=q.dataInfo,s={},t=q.markerInfo;for(g in t)b=r[g],f=t[g],m=f.multipleMarkers,i=f.id,a=b.y,c=b.x,d=b.width||0,h=c+d/2,l=a-stickLength,s=p.getStyleInformation(g),e=f.markers[0],f.value=b.value,n=s.marker.opacity,o=s.text.opacity,k={path:['M',h,a,'V',l],opacity:n},p.addGraphicalElement({el:'path',container:{label:'group'},id:i,component:p,attr:k,css:s.marker,label:'flagStick'},!0),k={path:pathStr,transform:`t${h-8+1},${l-flagHeight}`,opacity:n},p.addGraphicalElement({el:'path',container:{label:'group'},id:i,component:p,attr:k,css:s.marker,label:'flagTriangle'},!0),(m||(j=e.identifier))&&(k={text:m?f.markers.length:j.charAt(0),x:h,y:l-8,opacity:o},p.addGraphicalElement({el:'text',container:{label:'group'},id:i,component:p,attr:k,css:s.text,label:'markerText'},!0));p.styleInfo={}}}export default FlagMarker;